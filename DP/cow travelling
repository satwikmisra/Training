#include <bits/stdc++.h>

using namespace std;

int n,m,t;
int dr[]={-1,1,0,0};
int dc[]={0,0,1,-1};

bool inbounds(int r, int c){
    return (r<n && c<m && r>=0 && c>=0);
}

int main()
{
    cin>>n>>m>>t;
    char a[n][m];
    for(int i=0;i<n;i++){
        string s; cin>>s;
        for(int j=0;j<m;j++){
            a[i][j]=s[j];
        }
    }
    int r1,c1,r2,c2; cin>>r1>>c1>>r2>>c2; r1--; c1--; r2--; c2--;
    int dp[n][m][t+1];
    memset(dp,0,sizeof(dp));
    dp[r1][c1][0]=1;
    for(int time=1;time<=t;time++){
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                for(int k=0;k<4;k++){
                    int nr=i+dr[k];
                    int nc=j+dc[k];
                    if(inbounds(nr,nc) && a[nr][nc]=='.'){
                        dp[i][j][time]+=dp[nr][nc][time-1];
                    }
                }
            }
        }
    }
    /*for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            cout<<dp[i][j][t];
        }
        cout<<"\n";
    }*/
    cout<<dp[r2][c2][t];
    return 0;
}
