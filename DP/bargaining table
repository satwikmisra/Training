#include <bits/stdc++.h>

using namespace std;

bool dp[25][25][25][25];
bool grid[25][25];
int n, m;

bool inbounds(int i, int j){
 return (i>=0 && j>=0 && i<n && j<m);
}

int main()
{
    cin>>n>>m;
    for(int i=0;i<n;i++){
        string s; cin>>s;
        for(int j=0;j<m;j++){
            if(s[j]=='0') grid[i][j]=true;
        }
    }

    for(int i1=0;i1<n;i1++){
        for(int j1=0;j1<m;j1++){
            for(int i2=i1;i2<n;i2++){
                for(int j2=j1;j2<m;j2++){
                    if(i1==i2 && j1==j2){
                        dp[i1][j1][i2][j2]=grid[i1][j1];
                        continue;
                    }
                    if(!grid[i2][j2]){
                        dp[i1][j1][i2][j2]=false;
                        continue;
                    }
                    bool f1=true; bool f2=true;
                    int ni=i2-1;
                    int nj=j2-1;
                    if(inbounds(ni,j2) && ni>=i1){
                        f1=dp[i1][j1][ni][j2];
                    }
                    if(inbounds(i2,nj) && nj>=j1){
                        f2=dp[i1][j1][i2][nj];
                    }
                    if(f1 && f2) dp[i1][j1][i2][j2]=true;
                    else dp[i1][j1][i2][j2]=false;


                }
            }
        }
    }

    int ans=0;
    for(int i1=0;i1<n;i1++){
        for(int j1=0;j1<m;j1++){
            for(int i2=i1;i2<n;i2++){
                for(int j2=j1;j2<m;j2++){
                    if(dp[i1][j1][i2][j2])
                        ans=max(ans, 2*(i2-i1+1) + 2*(j2-j1+1) );
                }
            }
        }
    }
    cout<<ans;



    return 0;
}
