#include <bits/stdc++.h>

using namespace std;

int main()
{
    int n; cin>>n;
    vector<char>sym; vector<char>op;
    string s; cin>>s;
    for(int i=0;i<n;i++){
        if(s[i]=='T' || s[i]=='F') sym.push_back(s[i]);
        else op.push_back(s[i]);
    }
    int t[sym.size()][sym.size()]; int f[sym.size()][sym.size()];
    memset(t,0,sizeof(t)); memset(f,0,sizeof(f));
    for(int i=0;i<sym.size();i++){
        t[i][i]=0; f[i][i]=0;
        if(sym[i]=='T') t[i][i]=1; else f[i][i]=1;
    }

    for(int g=1;g<sym.size();g++){
        for(int i=0;i+g<sym.size();i++){
            for(int cut=i;cut<i+g;cut++){
                int j=i+g;
                int tot=(t[i][cut]+f[i][cut])*(t[cut+1][j]+f[cut+1][j]);
                if(op[cut]=='&'){
                    t[i][j]+=((t[i][cut])*(t[cut+1][j]));
                    f[i][j]+=(tot- t[i][cut]*t[cut+1][j]);
                }
                else if(op[cut]=='|'){
                    f[i][j]+=((f[i][cut])*(f[cut+1][j]));
                    t[i][j]+=(tot- f[i][cut]*f[cut+1][j]);
                }
                else if(op[cut]=='^'){
                    t[i][j]+=((t[i][cut]*f[cut+1][j])+(t[cut+1][j]*f[i][cut]))%1003;
                    f[i][j]+=((t[i][cut]*t[cut+1][j])+(f[i][cut]*f[cut+1][j]))%1003;
                }
                t[i][j]%=1003;
                f[i][j]%=1003;
                t[i][cut]%=1003;
                f[i][cut]%=1003;
                t[cut+1][j]%=1003;
                f[cut+1][j]%=1003;
            }
        }
    }
    cout<<(t[0][sym.size()-1])%1003<<"\n";

    return 0;
}
