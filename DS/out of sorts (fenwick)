problem: http://usaco.org/index.php?page=viewproblem2&cpid=834 & https://csacademy.com/contest/round-42/task/sorting-steps/

#include <bits/stdc++.h>

using namespace std;

struct BIT{
    vector<int>bit;
    int size;
    BIT(int sz){
        bit.resize(sz+1);
        size=sz;
    }
    int lsb(int num){
        return num & -num;
    }
    void update(int pos, int val){
        while(pos<=size){
            bit[pos]+=val;
            pos+=lsb(pos);
        }
    }
    void reset(int pos){
        int val=rangesum(pos,pos);
        update(pos,-val);
    }
    int sum(int pos){
        int ret=0;
        while(pos>0){
            ret+=bit[pos];
            pos-=lsb(pos);
        }
        return ret;
    }
    int rangesum(int a, int b){
        return sum(b)-sum(a-1);
    }
};

int main()
{
    ifstream cin("sort.in");
    ofstream cout("sort.out");
    int n;
    cin>>n;
    BIT t=BIT(n+1);
    vector<int>v;
    vector<int>real;
    v.resize(n);
    real.resize(n);
    map<int,int>tf;
    for(int i=0;i<n;i++){
        cin>>v[i]; real[i]=v[i];
    }
    sort(v.begin(),v.end());
    for(int i=0;i<n;i++){
        if(tf[v[i]]==0) tf[v[i]]=i+1;
    }
    int ans=0;
    for(int i=0;i<n;i++){
        t.update(tf[real[i]],1);
        ans=max(ans, t.rangesum(tf[real[i]]+1,n+1));
    }
    cout<<ans+1;
    return 0;
}
