//link: http://usaco.org/index.php?page=viewproblem2&cpid=91
//revisit later

#include <bits/stdc++.h>

using namespace std;

struct BIT{
    vector<int>bit;
    int size;
    BIT(int sz){
        bit.resize(sz+1);
        size=sz;
    }
    int lsb(int num){
        return num & -num;
    }
    void update(int pos, int val){
        while(pos<=size){
            bit[pos]+=val;
            pos+=lsb(pos);
        }
    }
    void reset(int pos){
        int val=rangesum(pos,pos);
        update(pos,-val);
    }
    int sum(int pos){
        int ret=0;
        while(pos>0){
            ret+=bit[pos];
            pos-=lsb(pos);
        }
        return ret;
    }
    int rangesum(int a, int b){
        return sum(b)-sum(a-1);
    }
};

int main()
{
    int n, x; cin>>n>>x;
    BIT inv=BIT(2*n+1);
    int pref=n+1;
    inv.update(pref,1);
    long long ans=0;
    for(int i=0;i<n;i++){
        int t; cin>>t;
        if(t>=x) pref++;
        else pref--;
        ans+=inv.rangesum(1,pref);
        inv.update(pref,1);
    }
    cout<<ans;
    return 0;
}
