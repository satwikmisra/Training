//weird grader causes tle

#include <bits/stdc++.h>

using namespace std;

const int MAXN=10000;
int n;
vector<pair<int,int> > adj[MAXN+1];
bool visited[MAXN+1];
int height[MAXN+1], first[MAXN+1];
vector<int> euler;
int k=log2(MAXN+1);
int st[2*MAXN+2][25];

void restart(){
    n=0;
    for(int i=0;i<=MAXN;i++){
        height[i]=first[i];
        adj[i].clear();
    }
    euler.clear();
}

void genRMQ(){
    for(int i=0;i<euler.size();i++){
        st[i][0]=i;
    }
    for(int j=1;j<=k;j++){
        for(int i=0;i+(1<<j)<=euler.size();i++){
            if(euler[st[i][j-1]] < euler[st[i+(1<<j)][j-1]]) st[i][j]=st[i][j-1];
            else st[i][j]=st[i+(1<<j)][j-1];
        }
    }
}

int query(int l, int r){
    int j=log2(r-l+1);
    if(euler[st[l][j]]<euler[st[r-(1<<j)+1][j]]) return euler[st[l][j]];
    else return euler[st[r-(1<<j)+1][j]];
}

void dfs(int cur, int h){
    visited[cur]=true;
    height[cur]=h;
    first[cur]=euler.size();
    euler.push_back(cur);
    for(int i=0;i<adj[cur].size();i++){
        if(!visited[adj[cur][i].first]){
            dfs(adj[cur][i].first,h+adj[cur][i].second);
            euler.push_back(cur);
        }
    }
}

int lca(int u, int v){
    int left=first[u]; int right=first[v];
    if(left>right) swap(left, right);
    return query(left,right);
}

int dist(int u, int v){
    return (height[u]+height[v]-2*height[lca(u,v)]);
}


int main()
{
    int tc; cin>>tc;
    for(int i=0;i<tc;i++){
        restart();
        cin>>n;
        for(int i=0;i<n-1;i++){
            int a, b, c;
            cin>>a>>b>>c;
            adj[a].push_back(make_pair(b,c));
            adj[b].push_back(make_pair(a,c));
        }
        dfs(0,0);
        genRMQ();
        int sum=0; int num=0;
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                sum+=dist(i,j); num++;
            }
        }
        cout<< (double) sum/num;
    }
    return 0;
}
